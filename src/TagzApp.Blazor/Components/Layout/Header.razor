@using Microsoft.AspNetCore.Authorization;
@using TagzApp.Blazor.Components.Account
@inject IAuthorizationService AuthorizationService
@inject ApplicationConfiguration AppConfiguration

<header>
	<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light mb-4  rounded-3 bg-opacity-75">
		<div class="container-fluid">

            <a class="navbar-brand" href="/">@*<b>@AppConfiguration.SiteName</b> *@

			<div class="logo">
				<img src="/img/logo.webp" width="200" />
                </div>
            </a>
              

			@if (ConfigureTagzAppFactory.IsConfigured)
			{
				<button class="navbar-toggler" type="button"
						data-bs-toggle="collapse"
						data-bs-target=".navbar-collapse"
						aria-controls="navbarSupportedContent"
						aria-expanded="false"
						aria-label="Toggle navigation">

					<span class="navbar-toggler-icon"></span>

				</button>

				<div class="navbar-collapse collapse d-sm-inline-flex justify-content-center">
					<ul class="navbar-nav flex-grow-1 justify-content-center gap-3">

						<li class="nav-item">
							<NavLink class="nav-link" href="/Waterfall"><i class="bi-water"/>Waterfall</NavLink>
						</li>

						@if (AppConfiguration.ModerationEnabled)
						{
							<AuthorizeView Policy="@RolesAndPolicies.Policy.Moderator">
								<li class="nav-item">
									<NavLink class="nav-link" href="/Moderation">Moderation</NavLink>
								</li>
								<li class="nav-item">
									<NavLink class="nav-link" href="/BlockedUsers">Blocked Users</NavLink>
								</li>
							</AuthorizeView>
						}
						<li class="nav-item">
							<NavLink class="nav-link" target="_blank" href="/Overlay">Overlay</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link" target="_blank" href="/PortraitOverlay">Portrait Overlay</NavLink>
						</li>
					</ul>



                    <LoginView />

				</div>
			}

		</div>
	</nav>

</header>
@code {

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

}